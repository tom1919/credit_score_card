y = "Acceptance %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 50))) +
scale_y_continuous( breaks = c(seq(30,90, 15)))
opt_cut <- cutoffs %>% filter(profit_per_cust == max_profit) %>% pull(cutoff)
opt_cut
ggplot(cutoffs, aes(x= cutoff, y = accepts_per)) +
geom_line(size = 1.5, color = "olivedrab2") +
coord_flip() +
geom_vline(xintercept = opt_cut) +
labs(x = "",
y = "Acceptance %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 50))) +
scale_y_continuous( breaks = c(seq(30,90, 15)))
cutoffs %>% filter(profit_per_cust == max_profit)
opt_acpt <- cutoffs %>% filter(profit_per_cust == max_profit) %>%
pull(accepts_per)
p1 <- ggplot(cutoffs, aes(x= cutoff, y = accepts_per)) +
geom_line(size = 1.5, color = "olivedrab2") +
coord_flip() +
geom_vline(xintercept = opt_cut, color = 'red') +
geom_hline(yintercept = opt_acpt, color = 'red') +
labs(x = "",
y = "Acceptance %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 50))) +
scale_y_continuous( breaks = c(seq(30,90, 15)))
cutoffs %>% filter(profit_per_cust == max_profit)
opt_bad <- cutoffs %>% filter(profit_per_cust == max_profit) %>%
pull(bad_per)
# bad % for optimal cut
opt_bad <- cutoffs %>% filter(profit_per_cust == max_profit) %>%
pull(bad_per)
p1 <- ggplot(cutoffs, aes(x= cutoff, y = accepts_per)) +
geom_line(size = 1.5, color = "olivedrab2") +
coord_flip() +
geom_vline(xintercept = opt_cut, color = 'red') +
geom_hline(yintercept = opt_acpt, color = 'red') +
labs(x = "",
y = "Acceptance %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 50))) +
scale_y_continuous( breaks = c(seq(30,90, 15)))
p2 <- ggplot(cutoffs, aes(x= cutoff, y = bad_per)) +
geom_line(size = 1.5, color = "tomato4") +
coord_flip() +
geom_vline(xintercept = opt_cut, color = 'red') +
geom_hline(yintercept = opt_bad, color = 'red') +
labs(x = "",
y = "Default %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black"))+
scale_x_continuous( breaks = c(seq(400,600, 50)))
grid.arrange(p1, p2, ncol = 1)
p1 <- ggplot(cutoffs, aes(x= cutoff, y = accepts_per)) +
geom_line(size = 1.5, color = "olivedrab2") +
coord_flip() +
geom_hline(yintercept = opt_acpt, color = 'red') +
labs(x = "",
y = "Acceptance %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 50))) +
scale_y_continuous( breaks = c(seq(30,90, 15)))
p2 <- ggplot(cutoffs, aes(x= cutoff, y = bad_per)) +
geom_line(size = 1.5, color = "tomato4") +
coord_flip() +
geom_hline(yintercept = opt_bad, color = 'red') +
labs(x = "",
y = "Default %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black"))+
scale_x_continuous( breaks = c(seq(400,600, 50)))
grid.arrange(p1, p2, ncol = 1)
p1 <- ggplot(cutoffs, aes(x= cutoff, y = accepts_per)) +
geom_line(size = 1.5, color = "olivedrab2") +
coord_flip() +
geom_hline(yintercept = opt_acpt, color = 'red') +
labs(x = "",
y = "Acceptance %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 50))) +
scale_y_continuous( breaks = c(seq(25,100, 15)))
p2 <- ggplot(cutoffs, aes(x= cutoff, y = bad_per)) +
geom_line(size = 1.5, color = "tomato4") +
coord_flip() +
geom_hline(yintercept = opt_bad, color = 'red') +
labs(x = "",
y = "Default %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black"))+
scale_x_continuous( breaks = c(seq(400,600, 50)))
grid.arrange(p1, p2, ncol = 1)
p1 <- ggplot(cutoffs, aes(x= cutoff, y = accepts_per)) +
geom_line(size = 1.5, color = "olivedrab2") +
coord_flip() +
geom_hline(yintercept = opt_acpt, color = 'red') +
labs(x = "",
y = "Acceptance %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 50))) +
scale_y_continuous( breaks = c(seq(25,100, 10)))
grid.arrange(p1, p2, ncol = 1)
p2 <- ggplot(cutoffs, aes(x= cutoff, y = bad_per)) +
geom_line(size = 1.5, color = "tomato4") +
coord_flip() +
geom_hline(yintercept = opt_bad, color = 'red') +
labs(x = "",
y = "Default %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black"))+
scale_x_continuous( breaks = c(seq(400,600, 50))) +
scale_y_continuous( breaks = c(seq(0,3.25, .25)))
grid.arrange(p1, p2, ncol = 1)
ggplot(cutoffs, aes(x= cutoff, y = profit_per_cust)) +
geom_line(size = 1.5, color = "seagreen") +
geom_hline(yintercept = max_profit, color = 'red') +
geom_hline(xintercept = opt_cut, color = 'red') +
labs(x = "Cutoff Score",
y = "Profit Per Customer ($)") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 25))) +
scale_y_continuous( breaks = c(seq(200,800, 100)))
ggplot(cutoffs, aes(x= cutoff, y = profit_per_cust)) +
geom_line(size = 1.5, color = "seagreen") +
geom_vline(yintercept = max_profit, color = 'red') +
geom_hline(xintercept = opt_cut, color = 'red') +
labs(x = "Cutoff Score",
y = "Profit Per Customer ($)") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 25))) +
scale_y_continuous( breaks = c(seq(200,800, 100)))
ggplot(cutoffs, aes(x= cutoff, y = profit_per_cust)) +
geom_line(size = 1.5, color = "seagreen") +
geom_vline(xintercept = max_profit, color = 'red') +
geom_hline(xintercept = opt_cut, color = 'red') +
labs(x = "Cutoff Score",
y = "Profit Per Customer ($)") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 25))) +
scale_y_continuous( breaks = c(seq(200,800, 100)))
max_profit
ggplot(cutoffs, aes(x= cutoff, y = profit_per_cust)) +
geom_line(size = 1.5, color = "seagreen") +
geom_vline(yintercept = max_profit, color = 'red') +
geom_hline(xintercept = opt_cut, color = 'red') +
labs(x = "Cutoff Score",
y = "Profit Per Customer ($)") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 25))) +
scale_y_continuous( breaks = c(seq(200,800, 100)))
ggplot(cutoffs, aes(x= cutoff, y = profit_per_cust)) +
geom_line(size = 1.5, color = "seagreen") +
geom_vline(xintercept = max_profit, color = 'red') +
geom_hline(yintercept = opt_cut, color = 'red') +
labs(x = "Cutoff Score",
y = "Profit Per Customer ($)") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 25))) +
scale_y_continuous( breaks = c(seq(200,800, 100)))
ggplot(cutoffs, aes(x= cutoff, y = profit_per_cust)) +
geom_line(size = 1.5, color = "seagreen") +
geom_hline(yintercept = max_profit, color = 'red') +
geom_vline(xintercept = opt_cut, color = 'red') +
labs(x = "Cutoff Score",
y = "Profit Per Customer ($)") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 25))) +
scale_y_continuous( breaks = c(seq(200,800, 100)))
ggplot(cutoffs, aes(x= cutoff, y = profit_per_cust)) +
geom_line(size = 1.5, color = "seagreen") +
geom_hline(yintercept = max_profit, color = 'red') +
geom_vline(xintercept = opt_cut, color = 'red') +
labs(x = "Cutoff Score",
y = "Profit Per Customer ($)") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 25))) +
scale_y_continuous( breaks = c(seq(200,800, 100)))
p1 <- ggplot(cutoffs, aes(x= cutoff, y = accepts_per)) +
geom_line(size = 1.5, color = "olivedrab2") +
coord_flip() +
geom_hline(yintercept = opt_acpt, color = 'red') +
labs(x = "",
y = "Acceptance %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 50))) +
scale_y_continuous( breaks = c(seq(25,100, 10)))
p2 <- ggplot(cutoffs, aes(x= cutoff, y = bad_per)) +
geom_line(size = 1.5, color = "tomato4") +
coord_flip() +
geom_hline(yintercept = opt_bad, color = 'red') +
labs(x = "",
y = "Default %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black"))+
scale_x_continuous( breaks = c(seq(400,600, 50))) +
scale_y_continuous( breaks = c(seq(0,3.25, .25)))
grid.arrange(p1, p2, ncol = 1)
ggplot(cutoffs, aes(x= cutoff, y = profit_per_cust)) +
geom_line(size = 1.5, color = "seagreen") +
geom_hline(yintercept = max_profit, color = 'red') +
geom_vline(xintercept = opt_cut, color = 'red') +
labs(title = "Cutoff Score: Profit",
x = "Cutoff Score",
y = "Profit Per Customer ($)") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 25))) +
scale_y_continuous( breaks = c(seq(200,800, 100)))
p1 <- ggplot(cutoffs, aes(x= cutoff, y = accepts_per)) +
geom_line(size = 1.5, color = "olivedrab2") +
#coord_flip() +
geom_hline(yintercept = opt_acpt, color = 'red') +
labs(x = "",
y = "Acceptance %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 50))) +
scale_y_continuous( breaks = c(seq(25,100, 10)))
p2 <- ggplot(cutoffs, aes(x= cutoff, y = bad_per)) +
geom_line(size = 1.5, color = "tomato4") +
#coord_flip() +
geom_hline(yintercept = opt_bad, color = 'red') +
labs(x = "",
y = "Default %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black"))+
scale_x_continuous( breaks = c(seq(400,600, 50))) +
scale_y_continuous( breaks = c(seq(0,3.25, .25)))
grid.arrange(p1, p2, ncol = 1)
p1 <- ggplot(cutoffs, aes(x= cutoff, y = accepts_per)) +
geom_line(size = 1.5, color = "olivedrab2") +
coord_flip() +
geom_hline(yintercept = opt_acpt, color = 'red') +
labs(x = "",
y = "Acceptance %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 50))) +
scale_y_continuous( breaks = c(seq(25,100, 10)))
p2 <- ggplot(cutoffs, aes(x= cutoff, y = bad_per)) +
geom_line(size = 1.5, color = "tomato4") +
coord_flip() +
geom_hline(yintercept = opt_bad, color = 'red') +
labs(x = "",
y = "Default %") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black"))+
scale_x_continuous( breaks = c(seq(400,600, 50))) +
scale_y_continuous( breaks = c(seq(0,3.25, .25)))
grid.arrange(p1, p2, ncol = 1)
score_card
write.csv(score_card, "../data/score_card.csv")
opt_cut
test_scored %>% mutate(pred_cut = ifelse(Score > 519, 0,1))
test_scored %>%
mutate(pred_cut = ifelse(Score > 519, 0,1)) %>%
select(GB, pred_cut, Score, everything())
test_scored <- test_scored %>%
mutate(pred_cut = ifelse(Score > 519, 0,1)) %>%
select(GB, pred_cut, Score, everything())
test_scored
confusionMatrix(data = test_scored$pred_cut, reference = test_scored$GB)
confusionMatrix(data = as.factor(test_scored$pred_cut),
reference = as.factor(test_scored$GB))
draw_confusion_matrix <- function(cm) {
layout(matrix(c(1,1,2)))
par(mar=c(2,2,2,2))
plot(c(100, 345), c(300, 450), type = "n", xlab="", ylab="", xaxt='n', yaxt='n')
title('CLASSIFICATION TABLE', cex.main=2)
# create the matrix
rect(150, 430, 240, 370, col='#3F97D0')
text(195, 440, 'No Purchase', cex=1.4, font=1)
rect(250, 430, 340, 370, col='#F7AD50')
text(295, 440, 'Purchase', cex=1.4, font=1)
text(125, 370, 'Predicted', cex=1.8, srt=90, font = 2)
text(245, 450, 'Actual', cex=1.8, font = 2)
rect(150, 305, 240, 365, col='#F7AD50')
rect(250, 305, 340, 365, col='#3F97D0')
text(140, 400, 'No Purchase', cex=1.4, srt=90, font=1)
text(140, 335, 'Purchase', cex=1.4, srt=90, font=1)
# add in the cm results
res <- as.numeric(cm$table)
text(195, 400, res[1], cex=1.9, font=2, col='white')
text(195, 335, res[2], cex=1.9, font=2, col='white')
text(295, 400, res[3], cex=1.9, font=2, col='white')
text(295, 335, res[4], cex=1.9, font=2, col='white')
# add in the specifics
plot(c(100, 0), c(100, 0), type = "n", xlab="", ylab="", main =
"ASSOCIATED STATISTICS", xaxt='n', yaxt='n', cex=1.8, font = 2)
text(10, 85, names(cm$byClass[1]), cex=1.2, font=3)
text(10, 70, round(as.numeric(cm$byClass[1]), 3), cex=1.2)
text(30, 85, names(cm$byClass[2]), cex=1.2, font=3)
text(30, 70, round(as.numeric(cm$byClass[2]), 3), cex=1.2)
text(50, 87, names(cm$byClass[5]), cex=1.2, font=3)
text(50, 71, round(as.numeric(cm$byClass[5]), 3), cex=1.2)
text(70, 87, names(cm$byClass[6]), cex=1.2, font=3)
text(70, 71, round(as.numeric(cm$byClass[6]), 3), cex=1.2)
text(90, 87, names(cm$byClass[7]), cex=1.2, font=3)
text(90, 71, round(as.numeric(cm$byClass[7]), 3), cex=1.2)
# add in the accuracy information
text(30, 35, names(cm$overall[1]), cex=1.5, font=3)
text(30, 19, round(as.numeric(cm$overall[1]), 3), cex=1.4)
text(70, 35, names(cm$overall[2]), cex=1.5, font=3)
text(70, 19, round(as.numeric(cm$overall[2]), 3), cex=1.4)
}
cm <- confusionMatrix(data = as.factor(test_scored$pred_cut),
reference = as.factor(test_scored$GB))
draw_confusion_matrix(cm)
cm
text(140, 335, 'Defaulted', cex=1.4, srt=90, font=1) # level 1
draw_confusion_matrix(cm)
draw_confusion_matrix(cm)
# add in the cm results
res <- as.numeric(cm$table)
draw_confusion_matrix(cm)
draw_confusion_matrix <- function(cm) {
layout(matrix(c(1,1,2)))
par(mar=c(2,2,2,2))
plot(c(100, 345), c(300, 450), type = "n", xlab="", ylab="", xaxt='n', yaxt='n')
title('CLASSIFICATION TABLE', cex.main=2)
# create the matrix
rect(150, 430, 240, 370, col='#3F97D0')
text(195, 440, 'No Default', cex=1.4, font=1) # level 0
rect(250, 430, 340, 370, col='#F7AD50')
text(295, 440, 'Defaulted', cex=1.4, font=1) # level 1
text(125, 370, 'Predicted', cex=1.8, srt=90, font = 2)
text(245, 450, 'Actual', cex=1.8, font = 2)
rect(150, 305, 240, 365, col='#F7AD50')
rect(250, 305, 340, 365, col='#3F97D0')
text(140, 400, 'No Default', cex=1.4, srt=90, font=1) # level 0
text(140, 335, 'Defaulted', cex=1.4, srt=90, font=1) # level 1
# add in the cm results
res <- as.numeric(cm$table)
text(195, 400, res[1], cex=1.9, font=2, col='white')
text(195, 335, res[2], cex=1.9, font=2, col='white')
text(295, 400, res[3], cex=1.9, font=2, col='white')
text(295, 335, res[4], cex=1.9, font=2, col='white')
# add in the specifics
plot(c(100, 0), c(100, 0), type = "n", xlab="", ylab="", main =
"ASSOCIATED STATISTICS", xaxt='n', yaxt='n', cex=1.8, font = 2)
text(10, 85, names(cm$byClass[1]), cex=1.2, font=3)
text(10, 70, round(as.numeric(cm$byClass[1]), 3), cex=1.2)
text(30, 85, names(cm$byClass[2]), cex=1.2, font=3)
text(30, 70, round(as.numeric(cm$byClass[2]), 3), cex=1.2)
text(50, 87, names(cm$byClass[5]), cex=1.2, font=3)
text(50, 71, round(as.numeric(cm$byClass[5]), 3), cex=1.2)
text(70, 87, names(cm$byClass[6]), cex=1.2, font=3)
text(70, 71, round(as.numeric(cm$byClass[6]), 3), cex=1.2)
text(90, 87, names(cm$byClass[7]), cex=1.2, font=3)
text(90, 71, round(as.numeric(cm$byClass[7]), 3), cex=1.2)
# add in the accuracy information
text(30, 35, names(cm$overall[1]), cex=1.5, font=3)
text(30, 19, round(as.numeric(cm$overall[1]), 3), cex=1.4)
text(70, 35, names(cm$overall[2]), cex=1.5, font=3)
text(70, 19, round(as.numeric(cm$overall[2]), 3), cex=1.4)
}
draw_confusion_matrix(cm)
test_scored2 <- all_scored %>%
filter(set == "test")
mutate(pred_cut = ifelse(Score > 519, 0,1)) %>%
select(GB, pred_cut, Score, everything())
all_scored
test_scored2 <- all_scored %>%
filter(set == "test") %>%
mutate(pred_cut = ifelse(Score > 519, 0,1)) %>%
select(GB, pred_cut, Score, everything())
cm <- confusionMatrix(data = as.factor(test_scored2$pred_cut),
reference = as.factor(test_scored2$GB))
draw_confusion_matrix(cm)
test_scored2 <- all_scored %>%
filter(set == "test") %>%
mutate(pred_cut = ifelse(Score > 519, 0,1)) %>%
select(GB, pred_cut, Score, everything())
cm <- confusionMatrix(data = as.factor(test_scored2$pred_cut),
reference = as.factor(test_scored2$GB))
draw_confusion_matrix(cm)
pred_prob <- test_scored2 %>% select(pred)
pred_prob
factor(test_scored2$GB)
pred_prob <- test_scored2 %>% select(pred) %>% pull()
pred_prob
pred_prob <- test_scored2 %>% select(pred) %>% pull()
pred_test <- ROCR::prediction(pred_prob, factor(test_scored2$GB))
perf_test <- ROCR::performance(pred_test, measure = "tpr", x.measure = "fpr")
plot(perf_test, colorize = TRUE, main = "ROC Curve")
perf_test <- ROCR::performance(pred_test, measure = "tpr", x.measure = "fpr")
plot(perf_test, colorize = TRUE, main = "ROC Curve")
perf_test
plot(perf_test)
factor(test_scored2$GB)
pred_test
plot(perf_test)
pred_test <- ROCR::prediction(pred_prob, test_scored2$GB)
perf_test <- ROCR::performance(pred_test, measure = "tpr", x.measure = "fpr")
plot(perf_test)
perf_test
ggplot(cutoffs, aes(x= cutoff, y = profit_per_cust)) +
geom_line(size = 1.5, color = "seagreen") +
geom_hline(yintercept = max_profit, color = 'red') +
geom_vline(xintercept = opt_cut, color = 'red') +
labs(title = "Cutoff Score: Profit",
x = "Cutoff Score",
y = "Profit Per Customer ($)") +
theme_bw() +
theme(plot.title = element_text(hjust = .5, size = 22, face = "bold"),
axis.text=element_text(size=13),
axis.title=element_text(size=18),
axis.line = element_line(colour = "black")) +
scale_x_continuous( breaks = c(seq(400,600, 25))) +
scale_y_continuous( breaks = c(seq(200,800, 100)))
test_scored
test_scored <- test_scored %>%
mutate(pred_cut = ifelse(Score > 519, 0,1)) %>%
select(GB, pred_cut, Score, everything())
cm <- confusionMatrix(data = as.factor(test_scored$pred_cut),
reference = as.factor(test_scored$GB))
draw_confusion_matrix(cm)
opt_cut
max_profit
opt_acpt
opt_bad
